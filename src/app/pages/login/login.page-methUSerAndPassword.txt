 console.log('---------------------->>>>>>>LoginUserAndPassword');
    this.usuario = formData.usuario.value;
    this.usuario = this.usuario.trim();
    this.contrasenia = formData.contrasenia.value;
    // this.loading = this.loadingCtrl.create({
    //   content: 'Iniciando sesión. Por favor espere...'
    // });
    this.loading = await this.loadingController.create({
      message: 'Iniciando sesión. Por favor espere...'
    });
    if (this.usuario === '' || this.contrasenia === '') {
      // const alert = this.alertCtrl.create({
      //   title: 'Error',
      //   subTitle: '¡Favor de ingresar Usuario y Contraseña!',
      //   buttons: [
      //     {
      //       text: 'Ok',
      //       role: 'ok',
      //       handler: () => {
      //         this.LoginProvider.setActivo(false);
      //       }
      //     }
      //   ]
      // });
      // alert.present();
      const alert = await this.alertController.create({
        header: 'Error!',
        message: '¡Favor de ingresar Usuario y Contraseña!',
        buttons: [
          {
            text: 'OK',
            handler: () => {
              console.log('Confirm Okay');
              this.LoginProvider.setActivo(false);
            }
          }
        ]
      });

      await alert.present();
      return false;
    } else {
      await this.loading.present();
    }
    this.ObjLoginDevice.user = this.usuario.trim().toLocaleLowerCase();
    this.ObjLoginDevice.password = btoa(this.contrasenia.trim());
    this.LoginProvider.loginUserAndPaswword(this.ObjLoginDevice)
      .then(async (RESULT_PROVIDER) => {
        // Aqui se procesa la información que se recibe desde el Servidor
        if (RESULT_PROVIDER.errorRequest === true) {
          this.loading.dismiss();
          // const alert = this.alertCtrl.create({
          //   title: 'Error en login',
          //   subTitle: RESULT_PROVIDER.mensaje,
          //   buttons: [
          //     {
          //       text: 'Ok',
          //       role: 'ok',
          //       handler: () => {
          //         this.LoginProvider.setActivo(false);
          //       }
          //     }
          //   ]
          // });
          // alert.present();
          const alert = await this.alertController.create({
            header: 'Error en login',
            message: RESULT_PROVIDER.mensaje,
            buttons: [
              {
                text: 'OK',
                handler: () => {
                  console.log('Confirm Okay');
                  this.LoginProvider.setActivo(false);
                }
              }
            ]
          });

          await alert.present();
        } else if (RESULT_PROVIDER.errorRequest === false) {
          // Guardar datos del conductor en provider y el token, Ingresa hasta guardar Token-> evitar error en petición unidades
          this.conductorProvider.setDataconductor(RESULT_PROVIDER.conductor);
          this.appConfiguracionProvider
            .setToken(RESULT_PROVIDER.token)
            .then(() => {
              this.LoginProvider.setActivo(true)
                .then(() => {
                  this.ingresar();
                })
                .catch(() => {
                  this.ingresar();
                }); // Guardar token LOGIN_PROVIDER
            });
        }
      })
      .catch(async (ERROR) => {
        if (ERROR.ok === false) {
          this.loading.dismiss();
          // const alert = this.alertCtrl.create({
          //   title: 'Error de comunicación',
          //   subTitle:
          //     'Fue imposible conectarse al servidor, favor de revisar tu conexión a internet.',
          //   buttons: [
          //     {
          //       text: 'Ok',
          //       role: 'ok',
          //       handler: () => {
          //         this.LoginProvider.setActivo(false);
          //       }
          //     }
          //   ]
          // });
          // alert.present();
          const alert = await this.alertController.create({
            header: 'Error de comunicación',
            message: 'Fue imposible conectarse al servidor, favor de revisar tu conexión a internet.',
            buttons: [
              {
                text: 'OK',
                handler: () => {
                  console.log('Confirm Okay');
                  this.LoginProvider.setActivo(false);
                }
              }
            ]
          });

          await alert.present();
        }
      });